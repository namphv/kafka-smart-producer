[project]
name = "kafka-smart-producer"
version = "0.1.0"
description = "Intelligent Kafka producer with real-time, lag-aware partition selection"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "confluent-kafka>=2.0.0",
    "redis>=6.1.1",
]
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["kafka", "producer", "smart-routing", "partition-selection", "consumer-lag"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]

[project.optional-dependencies]
redis = ["redis>=4.0.0"]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/kafka-smart-producer"
Repository = "https://github.com/yourusername/kafka-smart-producer"
Issues = "https://github.com/yourusername/kafka-smart-producer/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/kafka_smart_producer"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "black>=24.8.0",
    "mypy>=1.14.1",
    "pre-commit>=3.5.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.12.2",
]
