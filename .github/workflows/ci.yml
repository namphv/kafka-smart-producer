name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run linting
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Run type checking
        run: |
          uv run mypy src/ --ignore-missing-imports || true

      - name: Run tests with coverage
        run: |
          uv run pytest tests/ --ignore=tests/integration/ --cov=src --cov-report=xml --cov-report=html --cov-report=term -v --tb=short

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.9'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Test package build
        run: |
          uv build
          uv run python -c "import sys; sys.path.insert(0, 'src'); from kafka_smart_producer import SmartProducer, SmartProducerConfig; print('âœ“ Package imports successfully')"

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync --dev

      - name: Run security checks
        run: |
          uv run bandit -r src/ -f json || true
